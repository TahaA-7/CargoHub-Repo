name: Python application

on:
  push:
    branches: ["main"]

jobs:
  build:
    # Replace 'ubuntu-latest' with your self-hosted runner label
    runs-on: [self-hosted, cicd] # self-hosted runner group and label
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "pip"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Set environment variables for testing
        run: |
          echo "DEBUG=True" >> $GITHUB_ENV
          echo "SECRET_KEY=django-insecure-aeothm-c1sbqu8i_@47@ydlsenn@xm%me@opdibl^$_l6_k+ps" >> $GITHUB_ENV

      - name: Test with pytest and coverage
        run: |
          python cargohub/manage.py test api.tests.end-to-end-tests.test_cargohub

  deployment:
    # Replace 'ubuntu-latest' with your self-hosted runner label
    runs-on: [self-hosted, cicd] # self-hosted runner group and label
    needs: build
    environment: production
    steps:
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEPLOY_SSH_KEY }}" > ~/.ssh/id_rsa_new
          chmod 600 ~/.ssh/id_rsa_new
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_rsa_new
      - name: Set up sudo without password
        run: |
          echo "ubuntu ALL=(ALL) NOPASSWD: ALL" | sudo tee /etc/sudoers.d/ubuntu
          sudo chmod 0440 /etc/sudoers.d/ubuntu
      - name: Install python3-venv
        run: |
          sudo apt-get update || exit 1
          sudo apt-get install -y python3-venv || exit 1

      - name: Set environment variables for production
        run: |
          echo "Running with production settings"
        env:
          DEBUG: false
          SECRET_KEY: ${{ secrets.DEPLOY_SSH_KEY }}
          
      - name: Deploy Django Application
        run: |
          cd /home/ubuntu-1069707/CargoHub/CargoHub-Repo || exit 1
          git pull origin main || exit 1

          # Ensure python3-venv is installed
          sudo apt-get update || exit 1
          sudo apt-get install -y python3-venv || exit 1

          # Create venv if it does not exist
          if [ ! -d "venv" ]; then
            python3 -m venv venv || exit 1
          fi

          # Activate the virtual environment
          source venv/bin/activate || exit 1
          cd cargohub/ || exit 1

          # Install dependencies
          pip install -r requirements.txt || exit 1

          export PYTHONPATH=~/CargoHub/CargoHub-Repo/cargohub
          export DJANGO_SETTINGS_MODULE=config.settings.production
          echo "SECRET_KEY=django-insecure-aeothm-c1sbqu8i_@47@ydlsenn@xm%me@opdibl^$_l6_k+ps" >> $GITHUB_ENV

          # Run migrations and collectstatic
          python manage.py migrate --noinput || exit 1
          python manage.py collectstatic --noinput || exit 1

          # Start Gunicorn server
          gunicorn config.wsgi:application --bind 0.0.0.0:8000 --daemon 
